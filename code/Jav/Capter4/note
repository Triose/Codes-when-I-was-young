第四章：对象的行为
一、状态影响行为，行为影响状态
	对象所知者是实例变量，对象所为者是方法。
	方法可依据实例变量来展现不同的行为。
	行为会依据状态来决定。---方法会使用到实例变量的值。
	每个实例都是由同一个模式（类）派生出来的，那么什么区别它们的不同？（它们有相同的成员变量和方法）
	=>方法可以根据实例变量的值来表现出不同的行为。（方法操作实例变量）
	方法的值传递：
				方法运用形参。调用时传入实参。（可以传入多个参数给方法，类型相符即可）
	方法的返回值：
				可以有也可以没有。（但是如果说好了有返回值，那就不能没有）（只能返回单一值）
	参数传递时，Java是通过值传递的，也就是说通过拷贝传递。（对形参的操作不会改变实参<--暂指primitive主数据类型）
	ps 见EG1

***Getter 和 Setter*** -> Accessor 与 Mutator
	作用：执行Get和Set。
	Getter用来返回实例变量的值。
	Setter用来设定实例变量的值。
*********************************************
二、封装（-->不让数据被全世界知道和改动）
tehCat.height = 27;			// 去你妈的
tehCat.setHeight(27);		// 正解
	你需要存取修饰符(Access modifier)
	封装的基本原则：	将你的实例变量标记为私有，提供共有的getter与setter来控制存取动作。
	好处：setter能够检查参数并判断是否可以执行（不被乱搞）


实例变量初始有值不用特别设定：
	变量类型				初始值
	数值类型(包括char)		0
	boolean				false
	对象引用				null

但是！但是！但是！！！
局部变量没有默认值！如果变量被初始前就要使用的话，编译器就会报错。
参数也类似局部变量，但是没有初始值这么一说。


变量的比较-----primitive主数据类型或引用
	1、== 对于主数据类型： 值是否相等
	   == 对与引用变量：   引用是否都指向同一对象


